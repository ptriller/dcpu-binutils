# Copyright 2010 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This test can only be run on targets which support DWARF-2 and use gas.
# For now pick a sampling of likely targets.
if {![istarget *-*-linux*]
    && ![istarget *-*-gnu*]
    && ![istarget *-*-elf*]
    && ![istarget *-*-openbsd*]
    && ![istarget arm-*-eabi*]
    && ![istarget powerpc-*-eabi*]} {
    return 0  
}

set testfile dw2-inline-param
set binfile ${objdir}/${subdir}/${testfile}
if { [build_executable ${testfile}.exp "${testfile}" [list ${testfile}-main.c ${testfile}.S] {nodebug}] } {
    return -1
}

clean_restart ${testfile}

set break_at ""
set test "info addr break_at"
gdb_test_multiple $test $test {
    -re "Symbol \"break_at\" is at (0x\[0-9a-f\]+) in .*\r\n$gdb_prompt $" {
	set break_at $expect_out(1,string)
	pass $test
    }
}

gdb_unload

# Strip out any labels there as they could corrupt the `main' name.

set objcopy_program [transform objcopy]
set result [catch "exec $objcopy_program -N block_start -N block_end -N break_at ${binfile}" output]
verbose "result is $result"
verbose "output is $output"
if {$result != 0} {
  return -1
}

gdb_load ${binfile}
if [target_info exists gdb_stub] {
    gdb_step_for_stub;
}    

if ![runto "*${break_at}"] {
    return -1
}

gdb_test "bt" "#0  (0x\[0-9a-f\]+ in )?func \\(funcparam=<value optimized out>\\)\r\n#1  main \\(mainparam=<value optimized out>\\)\[^\r\n\]*"
